specVersion: 0.0.2
description: Indexer Reputation Badges
repository: https://github.com/badgeth/the-graph-indexer-badgesh
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: BadgeDefinitions
    network: rinkeby
    source:
      address: "0x351A05E0aC4d863Bdf8352986ABC0877A4606195"
      abi: BadgeDefinition
      startBlock: 8378654
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/badgeDefinition.ts
      entities:
        - BadgeDefinition
      abis:
        - name: BadgeDefinition
          file: ./abis/BadgeDefinition.json
      eventHandlers:
        - event: BadgeDefinitionCreated(string,string,string,bool,bool)
          handler: handleBadgeDefinitionCreated
  # - kind: ethereum/contract
  #   name: Staking
  #   network: rinkeby
  #   source:
  #     address: "0x2d44C0e097F6cD0f514edAC633d82E01280B4A5c"
  #     abi: Staking
  #     startBlock: 7560000
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.4
  #     language: wasm/assemblyscript
  #     file: ./src/mappings/staking.ts
  #     entities:
  #       - Indexer
  #       - IndexerParameterUpdate
  #       - IndexerSnapshot
  #     abis:
  #       - name: Staking
  #         file: ./abis/Staking.json
  #       - name: GraphTokenLockWallet
  #         file: ./abis/GraphTokenLockWallet.json
  #     eventHandlers:
  #       - event: StakeDeposited(indexed address,uint256)
  #         handler: handleStakeDeposited
  #       - event: StakeLocked(indexed address,uint256,uint256)
  #         handler: handleStakeLocked
  #       - event: StakeWithdrawn(indexed address,uint256)
  #         handler: handleStakeWithdrawn
  #       - event: StakeSlashed(indexed address,uint256,uint256,address)
  #         handler: handleStakeSlashed
  #       - event: DelegationParametersUpdated(indexed address,uint32,uint32,uint32)
  #         handler: handleDelegationParametersUpdated
  #       - event: StakeDelegated(indexed address,indexed address,uint256,uint256)
  #         handler: handleStakeDelegated
  #       - event: StakeDelegatedLocked(indexed address,indexed address,uint256,uint256,uint256)
  #         handler: handleStakeDelegatedLocked
  #       - event: StakeDelegatedWithdrawn(indexed address,indexed address,uint256)
  #         handler: handleStakeDelegatedWithdrawn
  #       - event: AllocationCreated(indexed address,indexed bytes32,uint256,uint256,indexed address,bytes32)
  #         handler: handleAllocationCreated
  #       - event: AllocationCollected(indexed address,indexed bytes32,uint256,uint256,indexed address,address,uint256,uint256)
  #         handler: handleAllocationCollected
  #       - event: AllocationClosed(indexed address,indexed bytes32,uint256,uint256,indexed address,uint256,address,bytes32,bool)
  #         handler: handleAllocationClosed
  #       - event: RebateClaimed(indexed address,indexed bytes32,indexed address,uint256,uint256,uint256,uint256,uint256)
  #         handler: handleRebateClaimed
  # - kind: ethereum/contract
  #   name: RewardsManager
  #   network: mainnet
  #   source:
  #     address: "0x9Ac758AB77733b4150A901ebd659cbF8cB93ED66"
  #     abi: RewardsManager
  #     startBlock: 11446790
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.4
  #     language: wasm/assemblyscript
  #     file: ./src/mappings/rewardsManager.ts
  #     entities:
  #       - Indexer
  #       - IndexerSnapshot
  #     abis:
  #       - name: RewardsManager
  #         file: ./abis/RewardsManager.json
  #     eventHandlers:
  #       - event: RewardsAssigned(indexed address,indexed address,uint256,uint256)
  #         handler: handleRewardsAssigned
